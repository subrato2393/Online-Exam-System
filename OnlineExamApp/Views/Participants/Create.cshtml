@model OnlineExams.Models.Participant

@{
/**/

//ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3>Participant Entry</h3>
    <hr />
    <h3 style="color:green">@ViewBag.Message</h3>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Organization", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("OrganizationId", null, null, htmlAttributes: new { @class = "form-control" })

        </div>
    </div>
    <div class="form-group">
        @Html.Label("Course", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BatchId, "Batch", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BatchId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BatchId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RegNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RegNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HighestAcademic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HighestAcademic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HighestAcademic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Image" required>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            //1. on course dropdown chage ->
            $('#OrganizationId').change(function () {
                //request for Course/GetTraineeBy?courseid=courseDD value
                var organizationid = $('#OrganizationId').val();
                var data = { organizationId: organizationid };
                $.ajax({
                    type: "POST",
                    url: "/trainers/getCourse",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    success: function (response) {
                        var courseDropDown = $('#CourseId');
                        courseDropDown.empty();
                        var defaultOption = "<option value=''>....Select...</option>";
                        courseDropDown.append(defaultOption);

                        $.each(response, function (key, course) {
                            var option = "<option value='" + course.Id + "'>" + course.Name + "</option>";
                            courseDropDown.append(option);
                        });

                    },
                    error: function (response) {
                        alert("Error!");
                    }
                });

            })


            //2. get json response and bind data in trainee dropdown

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            //1. on course dropdown chage ->
            $('#CourseId').change(function () {
                //request for Course/GetTraineeBy?courseid=courseDD value
                var courseid = $('#CourseId').val();
                var data = { courseId: courseid };
                $.ajax({
                    type: "POST",
                    url: "/trainers/getBatch",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    success: function (response) {
                        var batchDropDown = $('#BatchId');
                        batchDropDown.empty();
                        var defaultOption = "<option value=''>....Select...</option>";
                        batchDropDown.append(defaultOption);

                        $.each(response, function (key, batch) {
                            var option = "<option value='" + batch.Id + "'>" + batch.BatchNo + "</option>";
                            batchDropDown.append(option);
                        });

                    },
                    error: function (response) {
                        alert("Error!");
                    }
                });

            })


            //2. get json response and bind data in trainee dropdown

        });
    </script>
}