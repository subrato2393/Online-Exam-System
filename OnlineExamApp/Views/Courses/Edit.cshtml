@model OnlineExams.Models.View_Model.CourseEditVM
@{
    /**/

    ViewBag.Title = "Edit";
}
<!DOCTYPE html>
<html>
<head>
    <title>Online Exam</title>

    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <style>
        .panel.with-nav-tabs .panel-heading {
            padding: 5px 5px 0 5px;
        }

        .panel.with-nav-tabs .nav-tabs {
            border-bottom: none;
        }

        .panel.with-nav-tabs .nav-justified {
            margin-bottom: -1px;
        }

        .with-nav-tabs.panel-primary .nav-tabs > li > a,
        .with-nav-tabs.panel-primary .nav-tabs > li > a:hover,
        .with-nav-tabs.panel-primary .nav-tabs > li > a:focus {
            color: #fff;
        }

            .with-nav-tabs.panel-primary .nav-tabs > .open > a,
            .with-nav-tabs.panel-primary .nav-tabs > .open > a:hover,
            .with-nav-tabs.panel-primary .nav-tabs > .open > a:focus,
            .with-nav-tabs.panel-primary .nav-tabs > li > a:hover,
            .with-nav-tabs.panel-primary .nav-tabs > li > a:focus {
                color: #fff;
                background-color: #3071a9;
                border-color: transparent;
            }

        .with-nav-tabs.panel-primary .nav-tabs > li.active > a,
        .with-nav-tabs.panel-primary .nav-tabs > li.active > a:hover,
        .with-nav-tabs.panel-primary .nav-tabs > li.active > a:focus {
            color: #428bca;
            background-color: #fff;
            border-color: #428bca;
            border-bottom-color: transparent;
        }
    </style>

</head>
<body>
    <h2 style="color:green" id="courseName">Course Name:@Model.Name</h2>
    <div class="col-md-offset-9">
        <h3>@Html.ActionLink("< Search", "Index")</h3>
    </div>
    <div id="tabs">
        <div class="panel with-nav-tabs panel-primary">
            <div class="panel-heading">
                <ul class="nav nav-tabs">
                    @*<li class="active">@Html.ActionLink("Basic Info",null)</li>
                        <li>@Html.ActionLink("Assign Trainers",null)</li>
                        <li>@Html.ActionLink("Create Exams", null)</li>*@
                    <li class="active"><a href="#tab1" data-toggle="tab">Basic Info</a></li>
                    <li><a href="#tab2" data-toggle="tab">Assign Trainers</a></li>
                    <li><a href="#tab3" data-toggle="tab">Create Exams</a></li>
                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">

                    <div class="tab-pane fade in active" id="tab1">
                        @using (Ajax.BeginForm("Edit", "Courses", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "courseUpdateSuccess", OnFailure = "courseUpdateFail" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                @*<h2 style="color:green" id="courseName">Course Name :@Model.Name</h2>
                                    <div class="col-md-offset-9">
                                        @Html.ActionLink("< Search", "Index")
                                    </div>*@<hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrganizationId, "Organization", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("OrganizationId", Model.OrganizationLookUps, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.OrganizationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CourseCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CourseCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseDuration, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CourseDuration, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CourseDuration, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Credit, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Credit, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Credit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseOutLine, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.CourseOutLine, new { @class = "ckeditor" })
                                        @Html.ValidationMessageFor(model => model.CourseOutLine, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" id="courseUpdate" value="Update" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="tab-pane fade" id="tab2">
                        @using (Ajax.BeginForm("CourseAssignToTrainer", "Courses", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "courseAssignSuccess", OnFailure = "courseAssignFail" }))
                        {

                            <div class="form-group">
                                @Html.Label("TrainerDropdown", "Trainer", new { @class = "col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TrainerDropDown", Model.TrainerLookUps, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("LeadTrainer", "Lead?", new { @class = "col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButton("LeadTrainer", new { @checked = false })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-6 col-md-5">
                                    <input type="button" id="addTrainerButton" value="Add >" class="btn btn-default" />
                                </div>
                            </div>
                            <div class="form-horizontal">

                                <table class="table table-bordered table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>
                                                Trainer
                                            </th>
                                            <th>
                                                Lead Trainer?
                                            </th>
                                            <th>
                                                Action (Edit)
                                            </th>
                                            <th>
                                                Action (Delete)
                                            </th>
                                        </tr>

                                    </thead>
                                    <tbody id="tbTrainer"></tbody>
                                </table>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-11 col-md-5">
                                    <input type="submit" value="Assign" class="btn btn-default" />
                                </div>
                            </div>
                        }
                    </div>
                    <div class="tab-pane fade" id="tab3">
                        @using (Ajax.BeginForm("CreateExam", "Courses", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "createExamSuccess", OnFailure = "createExamFail" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OrganizationId, "Organization", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("OrganizationIds", Model.OrganizationLookUps, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.OrganizationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Course", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("CourseId", Model.CourseLookUps, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("ExamType", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("ExamType", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessage("ExamType", "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("ExamCode", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("ExamCode", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessage("ExamCode", "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Topic", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("Topic", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessage("Topic", "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("FullMarks", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("FullMarks", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessage("FullMarks", "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Duration", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.Editor("Duration", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessage("Duration", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-6 col-md-5">
                                        <input type="button" id="createExam" value="Add >" class="btn btn-success" />
                                    </div>
                                </div>
                                <div class="form-horizontal">
                                    <h3>Exam List</h3>
                                    <table class="table table-bordered table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Type
                                                </th>
                                                <th>
                                                    Code
                                                </th>
                                                <th>
                                                    Topic
                                                </th>
                                                <th>
                                                    Full Marks
                                                </th>
                                                <th>
                                                    Duration
                                                </th>

                                                <th>
                                                    Action (View)
                                                </th>
                                                <th>
                                                    Action (Edit)
                                                </th>
                                                <th>
                                                    Action (Remove)
                                                </th>

                                            </tr>

                                        </thead>
                                        <tbody id="tbExam"></tbody>
                                    </table>
                                    @*<a><span class="glyphicon glyphicon-edit"></span></a>*@
                                    @*<span class='glyphicon glyphicon-eye-open'></span>*@
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-11 col-md-5">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*create a popup window for delete operation*@
    <div class="modal fade" id="DeleteConfirmation">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Delete  Record</h4>
                </div>
                <div class="modal-body">
                    <h4>Are you Sure ? You want to delete This Record</h4>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>
                </div>
            </div>
        </div>
    </div>

    @*Create a popup window for edit exam record*@

    <div class="modal fade" id="EditConfirmation">
        <div class="modal-dialog">
            <div class="modal-content">
                @*<a href="~/Scripts/jquery-3.3.1.slim.min.map">~/Scripts/jquery-3.3.1.slim.min.map</a>*@
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Update  Record</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">


                        <div class="form-group">
                            @Html.Label("ExamType", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("ExamTypes", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("ExamType", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("ExamCode", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("ExamCodes", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("ExamCode", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Topic", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Topics", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("Topic", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("FullMarks", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("FullMark", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("FullMarks", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Duration", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Durations", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("Duration", "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-danger" onclick="UpdateExamRecord()">Update</a>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="EditTrainer">
        <div class="modal-dialog">
            <div class="modal-content">
                @*<a href="~/Scripts/jquery-3.3.1.slim.min.map">~/Scripts/jquery-3.3.1.slim.min.map</a>*@
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Update Student Record</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">


                        <div class="form-group">
                            @Html.Label("TrainerDropdown", "Trainer", new { @class = "col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TrainerDropDown", Model.TrainerLookUps, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("LeadTrainer", "Lead?", new { @class = "col-md-2" })
                            <div class="col-md-10">
                                @Html.RadioButton("LeadTrainer", new { @checked = false })
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                    @*<a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>*@
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $("#tabs").tabs();
        });
        //Course Update
        $('#courseUpdate').click(function () {
            var courseNames = $('#Name').val();
            $('#courseName').empty();
            $('#courseName').append(courseNames);
        });
        //Assign trainer
        var index = 0;
        $('#addTrainerButton').click(function () {
            var trainer = getTrainer();

            var tr = "<tr>";

            var td = "<td><input name='Trainers[" + index + "].trainerid' type='hidden' value='" + trainer.TrainerId + "'>"   + "<input name='Trainers[" + index + "].courseid' type='hidden' value='" + trainer.CourseId + "'>" + "<input name='Trainers[" + index + "].Name' type='hidden' value='" + trainer.TrainerName + "'>" + trainer.TrainerName + "</td>"

            //td += "<td><input name='Trainers[" + index + "]' type='radio'/></td>"

            td += "<td><input name='Trainers[" + index + "].isLead' type='radio' value='" + trainer.IsLead + "' />" + trainer.IsLead + "</td>"
            td += "<td><a href='#' class='btn btn-warning' onclick='EditTrainer(" + trainer.CourseId + ")'><span class='glyphicon glyphicon-edit'></span></a></td>"
            td += "<td><a href = '#'  class='btn btn-danger' onclick='DeleteTrainer(" + trainer.CourseId + ")'> <span class='glyphicon glyphicon-trash'></a></td>"

            //td += "<td></td>"
            tr += td + "</tr>";


            $('#tbTrainer').append(tr);
            ++index;

        })

        function getTrainer() {

            var trainerId = $('#TrainerDropDown').val();
            var trainerName = $('#TrainerDropDown :selected').text();
            var isLead = $('#LeadTrainer').is(':checked');
            var courseId=@Model.Id;

            var trainer = {
                TrainerId: trainerId,
                TrainerName: trainerName,
                CourseId: courseId,
                IsLead: isLead

            }

            return trainer;
        }
        //Create Exam Section on tab
        //function getSelectedItem() {
        //    var cell = $("#tbExam").children("tr").length; 
        //    return cell;
        //}
    

        var index = 0;
        var i = 0;
        $('#createExam').click(function () {
            var exam = getExam();
            //var tr = "<tr id=_row>";

            var par = $(this).parent().parent(); //tr
            var tdExamType = par.children("td:nth-child(1)");
            var tdExamCode = par.children("td:nth-child(2)");
            var tdExamTopic = par.children("td:nth-child(3)");
            var tdFullMarks = par.children("td:nth-child(4)");
            var tdDurations = par.children("td:nth-child(5)");
            var tdView = par.children("td:nth-child(6)");
            var tdEdit = par.children("td:nth-child(7)");
            var tdDelete = par.children("td:nth-child(8)");

            tdExamType = "<td ><input name='Exams[" + index + "].courseid'  type='hidden' value='" + exam.CourseId + "'>" + "<input name='Exams[" + index + "].examType' type='hidden' value='" + exam.ExamType + "'>" + exam.ExamType + "</td>"
            tdExamCode = "<td ><input name='Exams[" + index + "].examCode'  type='hidden'  value='" + exam.ExamCode + "'>" + exam.ExamCode + "</td>"
            tdExamTopic = "<td ><input name='Exams[" + index + "].topic'  type='hidden' value='" + exam.Topic + "'>" + exam.Topic + "</td>"
            tdFullMarks = "<td ><input name='Exams[" + index + "].fullMarks'  type='hidden' value='" + exam.FullMarks + "'>" + exam.FullMarks + "</td>"
            tdDurations = "<td ><input name='Exams[" + index + "].duration'  type='hidden' value='" + exam.Duration + "'>" + exam.Duration + "</td>"
            tdView = "<td><a href='#' class='btn btn-success'> <span class='glyphicon glyphicon-eye-open'></span></a></td>"
            tdEdit = "<td><a href ='#' class='btn btn-warning' onclick='EditExamRecord(" + i + ")'> <span class='glyphicon glyphicon-edit'></span></a ></td>"
            tdDelete = "<td><a href='#' class='btn btn-danger' onclick='DeleteExamRecord()'><span class='glyphicon glyphicon-trash'></a></td >"
            ++i;
            var createrow = "<tr id='createRow'>" + tdExamType + tdExamCode + tdExamTopic + tdFullMarks + tdDurations + tdView + tdEdit + tdDelete+"</tr>"

            
            $('#tbExam').append(createrow);
            var editexamrecord = EditExamsRecord();
            $('#ExamType').val("");
            $('#ExamCode').val("");
            $('#Topic').val("");
            $('#FullMarks').val("");
            $('#Duration').val("");
            ++index;
        })
  
        function DeleteExamRecord(CourseId) {
            $('#DeleteConfirmation').modal("show");
        }
        function ConfirmDelete() {
            $('#DeleteConfirmation').modal("hide");
            $('#createRow').remove();


        }

        //Create popup model for edit exam record
        function EditExamsRecord() {
    
            var exam = getExam();
            $("#ExamTypes").val(exam.ExamType);
            $("#ExamCodes").val(exam.ExamCode);
            $("#Topics").val(exam.Topic);
            $("#FullMark").val(exam.FullMarks);
            $("#Durations").val(exam.Duration);               
        }
        function EditExamRecord() {
                $('#EditConfirmation').modal("show");          
        }

        function UpdateExamRecord() {
            $.ajax({
                type: "POST",
                url: "/Courses/GetExamById",
                success: function (data) {
                    var obj = JSON.parse(data);
                    $("#ExamType").val(obj.ExamType);
                }
            })
        }

        //Create popup model for edit trainer information
        function DeleteTrainer(CourseId) {
            $('#CourseId').val(CourseId);
            $('#DeleteConfirmation').modal("show");
        }

        //create popup model for delete
        function EditTrainer(CourseId) {
            $('#EditTrainer').modal("show");

        }

        function getEditExam() {
            var examType =$('#exmType').val();
            var examCode =$('#exmcode').val();
            var topic = $('#exmtopic').val();
            var fullmarks = $('#fullmarks').val();
            var duration = $('#duration').val();

            var editexam = {
                ExamType: examType,
                ExamCode: examCode,
                Topic: topic,
                FullMarks: fullmarks,
                Duration: duration
            }
            return editexam;
        }

        function getExam() {
            var organizationId = $('#OrganizationIds').val();
            var courseId = $('#CourseId').val();
            var examType = $('#ExamType').val();
            var examCode = $('#ExamCode').val();
            var topic = $('#Topic').val();
            var fullMarks = $('#FullMarks').val();
            var duration = $('#Duration').val();

            var exam = {
                OrganizationId: organizationId,
                CourseId: courseId,
                ExamType: examType,
                ExamCode: examCode,
                Topic: topic,
                FullMarks: fullMarks,
                Duration: duration
            }
            return exam;
        }

        //create exam section ajax calling

        $(document).ready(function () {
            $('#OrganizationIds').change(function () {
                var organizationid = $('#OrganizationIds').val();
                var data = { organizationId: organizationid };
                $.ajax({
                    type: "POST",
                    url: "/trainers/getCourse",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    success: function (response) {
                        var courseDropDown = $('#CourseId');
                        courseDropDown.empty();
                        var defaultOption = "<option value=''>....Select...</option>";
                        courseDropDown.append(defaultOption);
                        $.each(response, function (key, course) {
                            var option = "<option value='" + course.Id + "'>" + course.Name + "</option>";
                            courseDropDown.append(option);
                        });
                    },
                    error: function (response) {
                        alert("Error!");
                    }
                });

            })


            //2. get json response and bind data in trainee dropdown

        });

        function courseUpdateSuccess() {
            alert("Course Update Successfully");
        }
        function courseUpdateFail(response) {
            alert("Course Update Failed");
        }
        function courseAssignSuccess() {
            alert("Course Assign Successfully");
        }
        function courseAssignFail(){
            alert("Course Assign Fail");
        }
        function createExamSuccess() {
            alert("Create exam Successfully");
        }
        function createExamFail() {
            alert("Create exam Fail");
        }


    </script>
}
